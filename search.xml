<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>样式动效</title>
      <link href="/2023/08/28/css/"/>
      <url>/2023/08/28/css/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue移动端适配配置</title>
      <link href="/2023/06/14/mobile/"/>
      <url>/2023/06/14/mobile/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> postcss postcss-pxtorem <span class="token parameter variable">--save</span><span class="token function">npm</span> <span class="token function">install</span> amfe-flexible <span class="token parameter variable">--save</span><span class="token function">npm</span> <span class="token function">install</span> autoprefixer <span class="token parameter variable">--save</span><span class="token comment">#postcss-pxtorem是PostCSS的插件，主要将px转换成rem单位。</span><span class="token comment">#amfe-flexible是配置可伸缩布局方案。</span><span class="token comment">#Autoprefixer是一款自动管理浏览器前缀的插件，可以解析css文件并且添加前缀到css内容里，使用Can I Use(caniuse网站)的数据决定哪些前缀是需要的。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在mian.js中引入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> <span class="token string">'amfe-flexible'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在vite.config.js中配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> <span class="token punctuation">&#123;</span> defineConfig <span class="token punctuation">&#125;</span> from <span class="token string">'vite'</span><span class="token function">import</span> vue from <span class="token string">'@vitejs/plugin-vue'</span><span class="token function">import</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> from <span class="token string">'path'</span><span class="token function">import</span> autoprefixer from <span class="token string">'autoprefixer'</span><span class="token function">import</span> postCssPxToRem from <span class="token string">'postcss-pxtorem'</span>// https://vitejs.dev/config/<span class="token builtin class-name">export</span> default defineConfig<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  plugins: <span class="token punctuation">[</span>vue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>,  css: <span class="token punctuation">&#123;</span>    postcss: <span class="token punctuation">&#123;</span>      plugins: <span class="token punctuation">[</span>        autoprefixer<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          overrideBrowserslist: <span class="token punctuation">[</span><span class="token string">'Android 4.1'</span>, <span class="token string">'iOS 7.1'</span>, <span class="token string">'Chrome > 31'</span>, <span class="token string">'ff > 31'</span>, <span class="token string">'ie >= 8'</span><span class="token punctuation">]</span>,        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>,        postCssPxToRem<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          // 自适应，px<span class="token operator">></span>rem转换          rootValue: <span class="token number">37.5</span>, // <span class="token number">75</span>表示750设计稿，37.5表示375设计稿          propList: <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span>, // 需要转换的属性，这里选择全部都进行转换          selectorBlackList: <span class="token punctuation">[</span><span class="token string">'norem'</span><span class="token punctuation">]</span>, // 过滤掉norem-开头的class，不进行rem转换        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>,      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>,  server: <span class="token punctuation">&#123;</span>    host: <span class="token string">'0.0.0.0'</span>,    open: false,    proxy: <span class="token punctuation">&#123;</span>      <span class="token string">'api/'</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>        target: <span class="token string">"https://api.iwyu.com/API/weibo/"</span>,        changeOrigin: <span class="token boolean">true</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>,  resolve: <span class="token punctuation">&#123;</span>    //统一设置文件路径@    alias: <span class="token punctuation">&#123;</span>      <span class="token string">'@'</span><span class="token builtin class-name">:</span> resolve<span class="token punctuation">(</span><span class="token string">'./src'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>,  base: <span class="token string">'./'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 相关</title>
      <link href="/2023/05/23/hello-world/"/>
      <url>/2023/05/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElementUI使用例子</title>
      <link href="/2023/03/15/elementUI/"/>
      <url>/2023/03/15/elementUI/</url>
      
        <content type="html"><![CDATA[<p>vue+ElementUI一些应用的例子</p><h2 id="Cascader级联选择器"><a href="#Cascader级联选择器" class="headerlink" title="Cascader级联选择器"></a>Cascader级联选择器</h2><h3 id="动态加载"><a href="#动态加载" class="headerlink" title="动态加载"></a>动态加载</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>el-form-item <span class="token assign-left variable">label</span><span class="token operator">=</span><span class="token string">"地点"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>el-cascader v-model<span class="token operator">=</span><span class="token string">"form.value"</span> :props<span class="token operator">=</span><span class="token string">"props"</span><span class="token operator">></span><span class="token operator">&lt;</span>/el-cascader<span class="token operator">></span><span class="token operator">&lt;</span>/el-form-item<span class="token operator">></span>new Vue<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        el: <span class="token string">'#app'</span>,        <span class="token function-name function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token builtin class-name">return</span> <span class="token punctuation">&#123;</span>                address: <span class="token string">''</span>,                form: <span class="token punctuation">&#123;</span>                    value: <span class="token string">''</span>                <span class="token punctuation">&#125;</span>,                props: <span class="token punctuation">&#123;</span>                    lazy: true,                    lazyLoad: this.lazyLoad                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>,        methods: <span class="token punctuation">&#123;</span>            lazyLoad<span class="token punctuation">(</span>node, resolve<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                this.getData<span class="token punctuation">(</span>node, resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>,            async getData<span class="token punctuation">(</span>node, resolve<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token builtin class-name">let</span> level <span class="token operator">=</span> node.level<span class="token punctuation">;</span>                console.log<span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>level <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    await axios.get<span class="token punctuation">(</span><span class="token string">'/api/country'</span><span class="token punctuation">)</span>.then<span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>//接口                        const nodes <span class="token operator">=</span> Array.from<span class="token punctuation">(</span>res.data.list<span class="token punctuation">)</span>.map<span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            id: item.id,                            value: item.name,                            label: item.name,                            leaf: level <span class="token operator">>=</span> <span class="token number">1</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成                        resolve<span class="token punctuation">(</span>nodes<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>level <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                     await axios.get<span class="token punctuation">(</span><span class="token string">'/api/cities'</span><span class="token punctuation">)</span>.then<span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>//接口                        const nodes <span class="token operator">=</span> Array.from<span class="token punctuation">(</span>res.data.list<span class="token punctuation">)</span>.filter<span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v.country <span class="token operator">==</span><span class="token operator">=</span> node.data.id<span class="token punctuation">)</span>.map<span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            id: item.id,                            value: item.name,                            label: item.name,                            leaf: level <span class="token operator">>=</span> <span class="token number">2</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成                        resolve<span class="token punctuation">(</span>nodes<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>level <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    await axios.get<span class="token punctuation">(</span><span class="token string">'/api/buildings'</span><span class="token punctuation">)</span>.then<span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>//接口                        const nodes <span class="token operator">=</span> Array.from<span class="token punctuation">(</span>res.data.list<span class="token punctuation">)</span>.filter<span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v.city <span class="token operator">==</span><span class="token operator">=</span> node.data.id<span class="token punctuation">)</span>.map<span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            id: item.id,                            value: item.name,                            label: item.name,                            leaf: level <span class="token operator">>=</span> <span class="token number">3</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成                        resolve<span class="token punctuation">(</span>nodes<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>level <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    await axios.get<span class="token punctuation">(</span><span class="token string">'/api/rooms'</span><span class="token punctuation">)</span>.then<span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>//接口                        const nodes <span class="token operator">=</span> Array.from<span class="token punctuation">(</span>res.data.list<span class="token punctuation">)</span>.filter<span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v.building <span class="token operator">==</span><span class="token operator">=</span> node.data.id<span class="token punctuation">)</span>.map<span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            id: item.id,                            value: item.name,                            label: item.name,                            leaf: level <span class="token operator">>=</span> <span class="token number">4</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成                        resolve<span class="token punctuation">(</span>nodes<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ElementUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElementUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mock.js</title>
      <link href="/2023/03/15/mock/"/>
      <url>/2023/03/15/mock/</url>
      
        <content type="html"><![CDATA[<p>Mock.js 是一款模拟数据生成器，旨在帮助前端独立于后端进行开发，帮助编写单元测试。<br><a href="http://mockjs.com/0.1/">http://mockjs.com/0.1/</a></p><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"http://mockjs.com/dist/mock.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> mockjs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Mock.mock<span class="token punctuation">(</span><span class="token string">'/api/country'</span>, <span class="token string">'get'</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'list'</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token string">'id'</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,                <span class="token string">'name'</span><span class="token builtin class-name">:</span> <span class="token string">'中国'</span>,                <span class="token string">'country_code'</span><span class="token builtin class-name">:</span> <span class="token number">100</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Mock.mock<span class="token punctuation">(</span><span class="token string">'/api/user'</span>, <span class="token string">'get'</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'list'</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token string">'id|+1'</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,                <span class="token string">'name'</span><span class="token builtin class-name">:</span> Random.name<span class="token punctuation">(</span><span class="token punctuation">)</span>,                <span class="token string">'region'</span><span class="token builtin class-name">:</span> Random.region<span class="token punctuation">(</span><span class="token punctuation">)</span>,                <span class="token string">'guid'</span><span class="token builtin class-name">:</span> Random.guid<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#123;</span>        <span class="token string">"id"</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,        <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Brenda Johnson"</span>,        <span class="token string">"region"</span><span class="token builtin class-name">:</span> <span class="token string">"华南"</span>,        <span class="token string">"guid"</span><span class="token builtin class-name">:</span> <span class="token string">"2dEfCAF2-8adb-ED4A-56ca-DAb803193C9B"</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mock.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mock.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相关链接</title>
      <link href="/2023/03/08/links/"/>
      <url>/2023/03/08/links/</url>
      
        <content type="html"><![CDATA[<p>工作学习用的到一些库，组件，API文档，等等</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ul><li>Lodash库 <a href="https://www.lodashjs.com/">https://www.lodashjs.com/</a></li><li>AngularJS Material 后台UI组件 <a href="https://material.angularjs.org/latest/">https://material.angularjs.org/latest/</a></li><li>Convert images（图片格式转换、压缩体积） <a href="https://imagestool.com/convert-images.html">https://imagestool.com/convert-images.html</a></li><li>阿里企业邮箱 <a href="https://qiye.aliyun.com/">https://qiye.aliyun.com/</a></li><li>GitLab <a href="https://git.vbio.top/">https://git.vbio.top/</a></li></ul><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><ul><li>Vue3中文文档 <a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></li><li>Vite中文文档 <a href="https://cn.vitejs.dev/">https://cn.vitejs.dev/</a></li><li>Vue-cli <a href="https://cli.vuejs.org/zh/">https://cli.vuejs.org/zh/</a></li><li>Element UI <a href="https://element.eleme.cn/#/zh-CN">https://element.eleme.cn/#/zh-CN</a></li><li>Element Plus <a href="https://element-plus.org/zh-CN/#/zh-CN">https://element-plus.org/zh-CN/#/zh-CN</a></li><li>iView <a href="https://iview.github.io/">https://iview.github.io/</a></li><li>Vant4（适用于Vue3）移动端组件库 <a href="https://vant-contrib.gitee.io/vant/#/zh-CN">https://vant-contrib.gitee.io/vant/#/zh-CN</a></li><li>Ant Design Vue <a href="https://www.antdv.com/components/overview">https://www.antdv.com/components/overview</a></li><li>base64图片在线转换工具 <a href="https://tool.chinaz.com/tools/imgtobase/">https://tool.chinaz.com/tools/imgtobase/</a></li><li>AI做图 <a href="https://stablediffusionweb.com/#demo">https://stablediffusionweb.com/#demo</a></li><li>搜索引擎 <a href="https://www.phind.com/">https://www.phind.com/</a></li><li>vercel <a href="https://vercel.com/">https://vercel.com/</a></li><li>渐变神器 <a href="https://gradient.shapefactory.co/">https://gradient.shapefactory.co/</a></li><li>Box Shadow <a href="https://box-shadow.art/">https://box-shadow.art/</a></li><li>css玻璃效果 <a href="https://glassgenerator.netlify.app/">https://glassgenerator.netlify.app/</a></li><li>3D效果 <a href="https://photo-sphere-viewer.js.org/">https://photo-sphere-viewer.js.org/</a></li><li>内网穿透 <a href="https://dashboard.cpolar.com/">https://dashboard.cpolar.com/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 相关链接 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相关链接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js一些例子</title>
      <link href="/2023/03/08/javascript/"/>
      <url>/2023/03/08/javascript/</url>
      
        <content type="html"><![CDATA[<h2 id="实用js代码"><a href="#实用js代码" class="headerlink" title="实用js代码"></a>实用js代码</h2><h3 id="计算两个日期间隔"><a href="#计算两个日期间隔" class="headerlink" title="计算两个日期间隔"></a>计算两个日期间隔</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">const dayDif <span class="token operator">=</span> <span class="token punctuation">(</span>date1, date2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>  <span class="token builtin class-name">let</span> diffDate <span class="token operator">=</span> Math.abs<span class="token punctuation">(</span>date1.getTime<span class="token punctuation">(</span><span class="token punctuation">)</span> - date2.getTime<span class="token punctuation">(</span><span class="token punctuation">))</span>  <span class="token builtin class-name">return</span> Math.floor<span class="token punctuation">(</span>diffDate/<span class="token punctuation">(</span><span class="token number">1000</span>*3600*24<span class="token punctuation">))</span><span class="token punctuation">&#125;</span>dayDif<span class="token punctuation">(</span>new Date<span class="token punctuation">(</span><span class="token string">"2022-7-11"</span><span class="token punctuation">)</span>, new Date<span class="token punctuation">(</span><span class="token string">"2022-10-15"</span><span class="token punctuation">)</span> //92<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符串首字母大写"><a href="#字符串首字母大写" class="headerlink" title="字符串首字母大写"></a>字符串首字母大写</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">const capitalize <span class="token operator">=</span> str <span class="token operator">=</span><span class="token operator">></span> str.charAt<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>.toUpperCase<span class="token punctuation">(</span><span class="token punctuation">)</span> + str.slice<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>capitalize<span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">)</span> //Hello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="判断某一天是不是工作日"><a href="#判断某一天是不是工作日" class="headerlink" title="判断某一天是不是工作日"></a>判断某一天是不是工作日</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">const isWeekday <span class="token operator">=</span> <span class="token function">date</span> <span class="token operator">=</span><span class="token operator">></span> new Date<span class="token punctuation">(</span>date<span class="token punctuation">)</span>.getDay<span class="token punctuation">(</span><span class="token punctuation">)</span> % <span class="token number">6</span> <span class="token operator">!=</span><span class="token operator">=</span> <span class="token number">0</span>isWeekday<span class="token punctuation">(</span><span class="token string">'2023-4-3'</span><span class="token punctuation">)</span> //true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="javascript-if-else-分支优化"><a href="#javascript-if-else-分支优化" class="headerlink" title="javascript if else 分支优化"></a>javascript if else 分支优化</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">function</span> getUserDescribe<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">"小刘"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console.log<span class="token punctuation">(</span><span class="token string">"刘哥哥"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">"小红"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console.log<span class="token punctuation">(</span><span class="token string">"小红妹妹"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">"陈龙"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console.log<span class="token punctuation">(</span><span class="token string">"大师"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">"李龙"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console.log<span class="token punctuation">(</span><span class="token string">"师傅"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">"大鹏"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console.log<span class="token punctuation">(</span><span class="token string">"恶人"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console.log<span class="token punctuation">(</span><span class="token string">"此人比较神秘！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>写成对象键值对的形式<span class="token keyword">function</span> getUserDescribe<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    const describeForNameMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        小刘: <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console.log<span class="token punctuation">(</span><span class="token string">"刘哥哥"</span><span class="token punctuation">)</span>,        小红: <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console.log<span class="token punctuation">(</span><span class="token string">"小红妹妹"</span><span class="token punctuation">)</span>,        陈龙: <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console.log<span class="token punctuation">(</span><span class="token string">"大师"</span><span class="token punctuation">)</span>,        李龙: <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console.log<span class="token punctuation">(</span><span class="token string">"师傅"</span><span class="token punctuation">)</span>,        大鹏: <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console.log<span class="token punctuation">(</span><span class="token string">"恶人"</span><span class="token punctuation">)</span>,    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    describeForNameMap<span class="token punctuation">[</span>name<span class="token punctuation">]</span> ? describeForNameMap<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin class-name">:</span> console.log<span class="token punctuation">(</span><span class="token string">"此人比较神秘！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p>使用img标签自定义data-src先存放图片路径，再通过js判断高度来将data-src的路径赋值给src</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./111.jpg"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./222.jpeg"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./3333.jpeg"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./IU.JPG"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./111.jpg"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./222.jpeg"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./3333.jpeg"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>img data-src<span class="token operator">=</span><span class="token string">"./IU.JPG"</span> <span class="token assign-left variable">alt</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    var imgs <span class="token operator">=</span> document.querySelectorAll<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-name function">lazyLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        var scrollTop <span class="token operator">=</span> document.body.scrollTop <span class="token operator">||</span> document.documentElement.scrollTop<span class="token punctuation">;</span> //滚动高度        var viewHeight <span class="token operator">=</span> document.documentElement.clientHeight<span class="token punctuation">;</span> //页面可视高度        <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> imgs.length<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.offsetTop <span class="token operator">&lt;</span> scrollTop + viewHeight<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.src <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.getAttribute<span class="token punctuation">(</span><span class="token string">'data-src'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> throttle<span class="token punctuation">(</span>fn, delay<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">let</span> lastTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token builtin class-name">return</span> <span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token builtin class-name">let</span> nowTime <span class="token operator">=</span> Date.now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nowTime - lastTime <span class="token operator">></span> delay<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                fn.call<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                lastTime <span class="token operator">=</span> nowTime<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    window.onscroll <span class="token operator">=</span> throttle<span class="token punctuation">(</span>lazyLoad, <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="全景图查看器（VR）"><a href="#全景图查看器（VR）" class="headerlink" title="全景图查看器（VR）"></a>全景图查看器（VR）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html <span class="token assign-left variable">lang</span><span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta <span class="token assign-left variable">charset</span><span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>全景图查看器<span class="token operator">&lt;</span>/title<span class="token operator">></span>    <span class="token operator">&lt;</span>link <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">"stylesheet"</span> <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.css"</span>/<span class="token operator">></span>    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/three/build/three.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/uevent@2/browser.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"viewer"</span> <span class="token assign-left variable">style</span><span class="token operator">=</span><span class="token string">"width: 100vw; height: 100vh;"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  var viewer <span class="token operator">=</span> new PhotoSphereViewer.Viewer<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    container: document.querySelector<span class="token punctuation">(</span><span class="token string">'#viewer'</span><span class="token punctuation">)</span>,    panorama: <span class="token string">'3333.jpeg'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="盒子拉伸拖拽"><a href="#盒子拉伸拖拽" class="headerlink" title="盒子拉伸拖拽"></a>盒子拉伸拖拽</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta <span class="token assign-left variable">charset</span><span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>style<span class="token operator">></span>        * <span class="token punctuation">&#123;</span>            margin: <span class="token number">0</span><span class="token punctuation">;</span>            padding: <span class="token number">0</span>        <span class="token punctuation">&#125;</span>        body <span class="token punctuation">&#123;</span>            height: 100vh<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box <span class="token punctuation">&#123;</span>            position: absolute<span class="token punctuation">;</span>            top: 100px<span class="token punctuation">;</span>            left: 100px<span class="token punctuation">;</span>            overflow: hidden<span class="token punctuation">;</span>            background-image: url<span class="token punctuation">(</span><span class="token string">"https://img0.baidu.com/it/u=3888138001,788758998&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=889&amp;h=500"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            background-repeat: no-repeat<span class="token punctuation">;</span>            background-size: <span class="token number">100</span>% <span class="token number">100</span>%<span class="token punctuation">;</span>            width: 700px<span class="token punctuation">;</span>            height: 400px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        /*四边*/        .box .t,        .box .b,        .box .l,        .box .r <span class="token punctuation">&#123;</span>            position: absolute<span class="token punctuation">;</span>            z-index: <span class="token number">1</span><span class="token punctuation">;</span>            /* background: <span class="token comment">#666; */</span>        <span class="token punctuation">&#125;</span>        .box .l,        .box .r <span class="token punctuation">&#123;</span>            width: 10px<span class="token punctuation">;</span>            height: <span class="token number">100</span>%<span class="token punctuation">;</span>            cursor: col-resize<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .t,        .box .b <span class="token punctuation">&#123;</span>            width: <span class="token number">100</span>%<span class="token punctuation">;</span>            height: 10px<span class="token punctuation">;</span>            cursor: row-resize<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .t <span class="token punctuation">&#123;</span>            top: <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .b <span class="token punctuation">&#123;</span>            bottom: <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .l <span class="token punctuation">&#123;</span>            left: <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .r <span class="token punctuation">&#123;</span>            right: <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        /*四角*/        .box .tl,        .box .bl,        .box .br,        .box .tr <span class="token punctuation">&#123;</span>            width: 20px<span class="token punctuation">;</span>            height: 20px<span class="token punctuation">;</span>            position: absolute<span class="token punctuation">;</span>            /* background: <span class="token comment">#CCC; */</span>            z-index: <span class="token number">2</span><span class="token punctuation">;</span>            cursor: nwse-resize        <span class="token punctuation">&#125;</span>        .box .tl,        .box .bl <span class="token punctuation">&#123;</span>            left: -5px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .tr,        .box .br <span class="token punctuation">&#123;</span>            right: -5px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .br,        .box .bl <span class="token punctuation">&#123;</span>            bottom: -5px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .tl,        .box .tr <span class="token punctuation">&#123;</span>            top: -5px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        .box .tr,        .box .bl <span class="token punctuation">&#123;</span>            cursor: nesw-resize<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        /*图片*/        img <span class="token punctuation">&#123;</span>            width: <span class="token number">100</span>%<span class="token punctuation">;</span>            height: <span class="token number">100</span>%<span class="token punctuation">;</span>            cursor: move<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token operator">&lt;</span>/style<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        window.onload <span class="token operator">=</span> <span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var oDiv <span class="token operator">=</span> document.getElementsByTagName<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            oDiv.style.width <span class="token operator">=</span> <span class="token string">'500px'</span><span class="token punctuation">;</span>            var aSpan <span class="token operator">=</span> oDiv.getElementsByTagName<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            // 遍历为每一个span添加上drage事件            <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> aSpan.length<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                dragFn<span class="token punctuation">(</span>aSpan<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">function</span> dragFn<span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                // 按下鼠标的操作                obj.onmousedown <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    var oEv <span class="token operator">=</span> ev <span class="token operator">||</span> event<span class="token punctuation">;</span>                    //   阻止事件的冒泡                    oEv.stopPropagation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    // 获取移动前盒子的宽高，边角的鼠标坐标，和距离浏览器边界的距离                    var oldWidth <span class="token operator">=</span> oDiv.offsetWidth<span class="token punctuation">;</span>                    var oldHeight <span class="token operator">=</span> oDiv.offsetHeight<span class="token punctuation">;</span>                    var oldX <span class="token operator">=</span> oEv.clientX<span class="token punctuation">;</span>                    var oldY <span class="token operator">=</span> oEv.clientY<span class="token punctuation">;</span>                    var oldLeft <span class="token operator">=</span> oDiv.offsetLeft<span class="token punctuation">;</span>                    var oldTop <span class="token operator">=</span> oDiv.offsetTop<span class="token punctuation">;</span>                    // 鼠标移动事件                    document.onmousemove <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        var oEv <span class="token operator">=</span> ev <span class="token operator">||</span> event<span class="token punctuation">;</span>                        // t <span class="token function">top</span>  l  left  r right  b bottom， 依次 tl 上左角                        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'tl'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> //                 代表的横向移动的距离，右为正，左为负                            // 计算移动后盒子的宽 <span class="token operator">=</span> 移动前盒子的宽度 - （移动后的横向坐标-移动前的横向坐标）                            oDiv.style.width <span class="token operator">=</span> oldWidth - <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            // 高度同理                            oDiv.style.height <span class="token operator">=</span> oldHeight - <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            // 同理计算修改盒子的定位，这里很多人就不理解了，我明明动的角，为嘛不是修改span                            // 我给你捋一捋，首先角和边是相对于父元素定位的，父元素也是一个绝对定位，这个时候                            //我动态修改父元素的定位，父元素的位置就好跟着改变，那么子元素是相对父元素定位的，                            // 那么在父元素最左边，不还是在最左边，这样就简单的实现了让所有定位元素跟着动                            oDiv.style.left <span class="token operator">=</span> oldLeft + <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.top <span class="token operator">=</span> oldTop + <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'bl'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.width <span class="token operator">=</span> oldWidth - <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight + <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.left <span class="token operator">=</span> oldLeft + <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.bottom <span class="token operator">=</span> oldTop + <span class="token punctuation">(</span>oEv.clientY + oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'tr'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.width <span class="token operator">=</span> oldWidth + <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight - <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.right <span class="token operator">=</span> oldLeft - <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.top <span class="token operator">=</span> oldTop + <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'br'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.width <span class="token operator">=</span> oldWidth + <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight + <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.right <span class="token operator">=</span> oldLeft - <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.bottom <span class="token operator">=</span> oldTop + <span class="token punctuation">(</span>oEv.clientY + oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'t'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight - <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.top <span class="token operator">=</span> oldTop + <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'b'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight + <span class="token punctuation">(</span>oEv.clientY - oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.bottom <span class="token operator">=</span> oldTop - <span class="token punctuation">(</span>oEv.clientY + oldY<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'l'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.width <span class="token operator">=</span> oldWidth - <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.left <span class="token operator">=</span> oldLeft + <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj.className <span class="token operator">==</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            oDiv.style.height <span class="token operator">=</span> oldHeight + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.width <span class="token operator">=</span> oldWidth + <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                            oDiv.style.right <span class="token operator">=</span> oldLeft - <span class="token punctuation">(</span>oEv.clientX - oldX<span class="token punctuation">)</span> + <span class="token string">'px'</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        // 边界判断                        boundary<span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                    // 松开鼠标时，移除移动的监听                    document.onmouseup <span class="token operator">=</span> <span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        document.onmousemove <span class="token operator">=</span> null<span class="token punctuation">;</span>                        document.onmouseup <span class="token operator">=</span> null<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                    // 阻止默认事件                    <span class="token builtin class-name">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            // 给盒子添加移动事件 就是简单的移动盒子            oDiv.onmousedown <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                var oevent <span class="token operator">=</span> ev <span class="token operator">||</span> event<span class="token punctuation">;</span>                // 阻止默认事件                oevent.preventDefault<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                // 阻止事件冒泡                oevent.stopPropagation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                var distanceX <span class="token operator">=</span> oevent.clientX - oDiv.offsetLeft<span class="token punctuation">;</span>                var distanceY <span class="token operator">=</span> oevent.clientY - oDiv.offsetTop<span class="token punctuation">;</span>                document.onmousemove <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    var oevent <span class="token operator">=</span> ev <span class="token operator">||</span> event<span class="token punctuation">;</span>                    oDiv.style.left <span class="token operator">=</span> oevent.clientX - distanceX + <span class="token string">'px'</span><span class="token punctuation">;</span>                    oDiv.style.top <span class="token operator">=</span> oevent.clientY - distanceY + <span class="token string">'px'</span><span class="token punctuation">;</span>                    boundary<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                document.onmouseup <span class="token operator">=</span> <span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    document.onmousemove <span class="token operator">=</span> null<span class="token punctuation">;</span>                    document.onmouseup <span class="token operator">=</span> null<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            // 边界判断事件            <span class="token keyword">function</span> <span class="token function-name function">boundary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token builtin class-name">let</span> oDivWidth <span class="token operator">=</span> oDiv.offsetWidth<span class="token punctuation">;</span>                <span class="token builtin class-name">let</span> oDivHeight <span class="token operator">=</span> oDiv.offsetHeight<span class="token punctuation">;</span>                <span class="token builtin class-name">let</span> oDivLeft <span class="token operator">=</span> oDiv.offsetLeft<span class="token punctuation">;</span>                <span class="token builtin class-name">let</span> oDivTop <span class="token operator">=</span> oDiv.offsetTop<span class="token punctuation">;</span>                <span class="token builtin class-name">let</span> bodyWidth <span class="token operator">=</span> document.body.clientWidth                <span class="token builtin class-name">let</span> bodyHeight <span class="token operator">=</span> document.body.clientHeight                console.log<span class="token punctuation">(</span>oDivLeft, oDivWidth, bodyWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>                // 左边界                <span class="token keyword">if</span> <span class="token punctuation">(</span>oDivLeft <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    oDiv.style.left <span class="token operator">=</span> <span class="token number">0</span> + <span class="token string">'px'</span>                <span class="token punctuation">&#125;</span>                // 右边界 多减5个像素减去的是防止滚动条会造成抖动                <span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span>oDivLeft <span class="token operator">+</span> oDivWidth<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token punctuation">(</span>bodyWidth <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">))</span></span> <span class="token punctuation">&#123;</span>                    oDiv.style.left <span class="token operator">=</span> bodyWidth - oDivWidth - <span class="token number">5</span> + <span class="token string">'px'</span>                <span class="token punctuation">&#125;</span>                //上边界                <span class="token keyword">if</span> <span class="token punctuation">(</span>oDivTop <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    oDiv.style.top <span class="token operator">=</span> <span class="token number">0</span> + <span class="token string">'px'</span>                <span class="token punctuation">&#125;</span>                // 下边界 多减5个像素减去的是防止滚动条会造成抖动                <span class="token keyword">if</span> <span class="token punctuation">(</span>oDivTop + oDivHeight <span class="token operator">>=</span> bodyHeight - <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    oDiv.style.top <span class="token operator">=</span> bodyHeight - oDivHeight - <span class="token number">5</span> + <span class="token string">'px'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"r"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"l"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"t"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"br"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"bl"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"tr"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"tl"</span><span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>-- <span class="token operator">&lt;</span>img <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://img0.baidu.com/it/u=3888138001,788758998&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=889&amp;h=500"</span><span class="token operator">></span> --<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表拖拽"><a href="#列表拖拽" class="headerlink" title="列表拖拽"></a>列表拖拽</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>el-card<span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"flex"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"item"</span> v-for<span class="token operator">=</span><span class="token string">"(item, i) in drag.list"</span> :key<span class="token operator">=</span><span class="token string">"item.id"</span> <span class="token assign-left variable">draggable</span><span class="token operator">=</span><span class="token string">"true"</span>                        @dragstart<span class="token operator">=</span><span class="token string">"dragstart(<span class="token variable">$event</span>, i)"</span> @dragenter<span class="token operator">=</span><span class="token string">"dragenter(<span class="token variable">$event</span>, i)"</span> @dragend<span class="token operator">=</span><span class="token string">"dragend"</span>                        @dragover<span class="token operator">=</span><span class="token string">"dragover"</span><span class="token operator">></span>                        <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item.name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>                    <span class="token operator">&lt;</span>/div<span class="token operator">></span>                <span class="token operator">&lt;</span>/div<span class="token operator">></span>                <span class="token operator">&lt;</span>ul<span class="token operator">></span>                    <span class="token operator">&lt;</span>li v-for<span class="token operator">=</span><span class="token string">"item in drag.list"</span> :key<span class="token operator">=</span><span class="token string">"item.id"</span><span class="token operator">></span>                        <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>                    <span class="token operator">&lt;</span>/li<span class="token operator">></span>                <span class="token operator">&lt;</span>/ul<span class="token operator">></span>            <span class="token operator">&lt;</span>/div<span class="token operator">></span>        <span class="token operator">&lt;</span>/el-card<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token function">import</span> <span class="token punctuation">&#123;</span> reactive <span class="token punctuation">&#125;</span> from <span class="token string">'vue'</span>const drag <span class="token operator">=</span> reactive<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    list: <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span> name: <span class="token string">'a'</span>, id: <span class="token number">1</span> <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span> name: <span class="token string">'b'</span>, id: <span class="token number">2</span> <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span> name: <span class="token string">'c'</span>, id: <span class="token number">3</span> <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span> name: <span class="token string">'d'</span>, id: <span class="token number">4</span> <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span> name: <span class="token string">'e'</span>, id: <span class="token number">5</span> <span class="token punctuation">&#125;</span>,    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token builtin class-name">let</span> dragIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">function</span> dragstart<span class="token punctuation">(</span>e, index<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    e.stopPropagation<span class="token punctuation">(</span><span class="token punctuation">)</span>    dragIndex <span class="token operator">=</span> index    setTimeout<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        e.target.classList.add<span class="token punctuation">(</span><span class="token string">'moveing'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> dragenter<span class="token punctuation">(</span>e, index<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    e.preventDefault<span class="token punctuation">(</span><span class="token punctuation">)</span>    // 拖拽到原位置时不触发    <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">!=</span><span class="token operator">=</span> index<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        const <span class="token builtin class-name">source</span> <span class="token operator">=</span> drag.list<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>        drag.list.splice<span class="token punctuation">(</span>dragIndex, <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        drag.list.splice<span class="token punctuation">(</span>index, <span class="token number">0</span>, <span class="token builtin class-name">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        // 更新节点位置        dragIndex <span class="token operator">=</span> index    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> dragover<span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    e.preventDefault<span class="token punctuation">(</span><span class="token punctuation">)</span>    e.dataTransfer.dropEffect <span class="token operator">=</span> <span class="token string">'move'</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> dragend<span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    e.target.classList.remove<span class="token punctuation">(</span><span class="token string">'moveing'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>style <span class="token assign-left variable">lang</span><span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span>.flex <span class="token punctuation">&#123;</span>    display: flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>.item <span class="token punctuation">&#123;</span>    width: 200px<span class="token punctuation">;</span>    height: 40px<span class="token punctuation">;</span>    line-height: 40px<span class="token punctuation">;</span>    // background-color: <span class="token comment">#f5f6f8;</span>    background-color: skyblue<span class="token punctuation">;</span>    text-align: center<span class="token punctuation">;</span>    margin: 10px<span class="token punctuation">;</span>    color: <span class="token comment">#fff;</span>    font-size: 18px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>.container <span class="token punctuation">&#123;</span>    position: relative<span class="token punctuation">;</span>    padding: <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>.moveing <span class="token punctuation">&#123;</span>    opacity: <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="动态词云"><a href="#动态词云" class="headerlink" title="动态词云"></a>动态词云</h2><h3 id="WordCloudRandom-vue"><a href="#WordCloudRandom-vue" class="headerlink" title="WordCloudRandom.vue"></a>WordCloudRandom.vue</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script setup <span class="token assign-left variable">lang</span><span class="token operator">=</span><span class="token string">"ts"</span><span class="token operator">></span><span class="token function">import</span> <span class="token punctuation">&#123;</span> ref, onMounted, onUnmounted <span class="token punctuation">&#125;</span> from <span class="token string">'vue'</span>interface AnimateElement extends HTMLElement <span class="token punctuation">&#123;</span>    animateInfo: <span class="token punctuation">&#123;</span>        scale?: number        x?: number        y?: number        z?: number    <span class="token punctuation">&#125;</span>    prevAnimateInfo: <span class="token punctuation">&#123;</span>        scale?: number        x?: number        y?: number        z?: number    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>const container <span class="token operator">=</span> ref<span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin class-name">let</span> randomAnimate: RandomAnimateclass RandomAnimate <span class="token punctuation">&#123;</span>    container: HTMLElement <span class="token operator">|</span> null <span class="token operator">=</span> null    items: AnimateElement<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    minScale <span class="token operator">=</span> <span class="token number">0.9</span>    scaleInterval <span class="token operator">=</span> <span class="token number">10000</span> // 缩放间隔    xInterval <span class="token operator">=</span> <span class="token number">40000</span> // 横向位移速度    yInterval <span class="token operator">=</span> <span class="token number">40000</span> // 纵向位移速度    animateInterval <span class="token operator">=</span> <span class="token number">16</span> // 动画间隔 16ms    index <span class="token operator">=</span> <span class="token number">1</span>    animationFrame: number <span class="token operator">|</span> undefined    restartTimer: number <span class="token operator">|</span> undefined    mutationObserver: MutationObserver <span class="token operator">|</span> undefined    constructor<span class="token punctuation">(</span>container: HTMLElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.container <span class="token operator">=</span> container        this.init<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function-name function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.container<span class="token operator">!</span>.style.position <span class="token operator">=</span> <span class="token string">'relative'</span>        this.createMutation<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function-name function">createMutation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.mutationObserver <span class="token operator">=</span> new MutationObserver<span class="token punctuation">(</span>function <span class="token punctuation">(</span>mutationRecords<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            mutationRecords.forEach<span class="token variable"><span class="token punctuation">((</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> &#123;                const &#123; addedNodes<span class="token punctuation">,</span> removedNodes &#125; <span class="token operator">=</span> record                if <span class="token punctuation">(</span>addedNodes.length<span class="token punctuation">)</span> &#123;                    randomAnimate.add<span class="token punctuation">(</span>                        Array.from<span class="token punctuation">(</span>addedNodes<span class="token punctuation">)</span>.filter<span class="token punctuation">(</span>                            <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> node.nodeType <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">1</span>                        <span class="token punctuation">)</span> as AnimateElement[]                    <span class="token punctuation">)</span>                &#125;                if <span class="token punctuation">(</span>removedNodes.length<span class="token punctuation">)</span> &#123;                    randomAnimate.remove<span class="token punctuation">(</span>                        Array.from<span class="token punctuation">(</span>removedNodes<span class="token punctuation">)</span>.filter<span class="token punctuation">(</span>                            <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> node.nodeType <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">1</span>                        <span class="token punctuation">)</span> as AnimateElement[]                    <span class="token punctuation">)</span>                &#125;            &#125;<span class="token punctuation">)</span>        &#125;<span class="token punctuation">)</span>        this.mutationObserver.observe<span class="token punctuation">(</span>container.value<span class="token operator">!</span><span class="token punctuation">,</span> &#123;            childList<span class="token operator">:</span> true<span class="token punctuation">,</span>            attributes<span class="token operator">:</span> false        &#125;<span class="token punctuation">)</span>    &#125;    add<span class="token punctuation">(</span>items<span class="token operator">:</span> AnimateElement <span class="token operator">|</span> AnimateElement[]<span class="token punctuation">)</span> &#123;        items <span class="token operator">=</span> Array.isArray<span class="token punctuation">(</span>items<span class="token punctuation">)</span> <span class="token operator">?</span> items <span class="token operator">:</span> [items]        items.forEach<span class="token punctuation">((</span>item<span class="token operator">:</span> AnimateElement<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> &#123;            item.style.position <span class="token operator">=</span> 'absolute'            item.style.left <span class="token operator">=</span> '<span class="token number">0</span>px'            item.style.top <span class="token operator">=</span> '<span class="token number">0</span>px'            item.animateInfo <span class="token operator">=</span> &#123;&#125;            item.prevAnimateInfo <span class="token operator">=</span> &#123;&#125; <span class="token operator">/</span><span class="token operator">/</span> 上一状态，用来判断移动方向与缩放状态            this.setScale<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            this.setPosition<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            this.setHover<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            this.render<span class="token punctuation">(</span>item<span class="token punctuation">)</span>        &#125;<span class="token punctuation">)</span>        this.items.push<span class="token punctuation">(</span>...items<span class="token punctuation">)</span>    &#125;    remove<span class="token punctuation">(</span>item<span class="token operator">:</span> AnimateElement <span class="token operator">|</span> AnimateElement[]<span class="token punctuation">)</span> &#123;        if <span class="token punctuation">(</span>Array.isArray<span class="token punctuation">(</span>item<span class="token punctuation">))</span></span> <span class="token punctuation">&#123;</span>            item.forEach<span class="token variable"><span class="token punctuation">((</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> &#123;                this.remove<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            &#125;<span class="token punctuation">)</span>        &#125; else &#123;            <span class="token operator">/</span><span class="token operator">/</span> item.parentElement<span class="token operator">!</span>.removeChild<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            const index <span class="token operator">=</span> this.items.indexOf<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            if <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> &#123;                this.items.splice<span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>            &#125;        &#125;    &#125;    setScale<span class="token punctuation">(</span>item<span class="token operator">:</span> AnimateElement<span class="token punctuation">)</span> &#123;        const maxZ <span class="token operator">=</span> this.items.length <span class="token operator">*</span> <span class="token number">100</span>        const minScale <span class="token operator">=</span> this.minScale        const &#123; animateInfo<span class="token punctuation">,</span> prevAnimateInfo &#125; <span class="token operator">=</span> item        if <span class="token punctuation">(</span><span class="token operator">!</span>animateInfo.scale<span class="token punctuation">)</span> &#123;            animateInfo.scale <span class="token operator">=</span> Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> minScale<span class="token punctuation">)</span> <span class="token operator">+</span> minScale        &#125; else &#123;            const scaleInterval <span class="token operator">=</span> this.scaleInterval            const scaleStep <span class="token operator">=</span> <span class="token punctuation">((</span><span class="token number">1</span> <span class="token operator">-</span> minScale<span class="token punctuation">)</span> <span class="token operator">/</span> scaleInterval<span class="token punctuation">)</span> <span class="token operator">*</span> this.animateInterval            const _animate <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>JSON.stringify<span class="token punctuation">(</span>animateInfo<span class="token punctuation">))</span></span>            <span class="token builtin class-name">let</span> direction            <span class="token keyword">if</span> <span class="token punctuation">(</span>prevAnimateInfo.scale<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                direction <span class="token operator">=</span>                    animateInfo.scale <span class="token operator">></span> prevAnimateInfo.scale <span class="token operator">||</span>                        animateInfo.scale <span class="token operator">==</span><span class="token operator">=</span> minScale                        ? <span class="token number">1</span>                        <span class="token builtin class-name">:</span> <span class="token parameter variable">-1</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                direction <span class="token operator">=</span> Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span> ? <span class="token number">1</span> <span class="token builtin class-name">:</span> <span class="token parameter variable">-1</span> // 随机开始放大或缩小            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                // 放大                animateInfo.scale <span class="token operator">+=</span> scaleStep                <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.scale <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    animateInfo.scale <span class="token operator">=</span> <span class="token number">1</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                // 缩小                animateInfo.scale -<span class="token operator">=</span> scaleStep                <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.scale <span class="token operator">&lt;</span> minScale<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    animateInfo.scale <span class="token operator">=</span> minScale                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            item.prevAnimateInfo.scale <span class="token operator">=</span> _animate.scale        <span class="token punctuation">&#125;</span>        animateInfo.z <span class="token operator">=</span> ~~<span class="token variable"><span class="token punctuation">((</span><span class="token punctuation">(</span>animateInfo.scale <span class="token operator">-</span> minScale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> minScale<span class="token punctuation">))</span></span> * maxZ<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    setPosition<span class="token punctuation">(</span>item: AnimateElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        const maxX <span class="token operator">=</span> this.container<span class="token operator">!</span>.clientWidth - item.clientWidth        const maxY <span class="token operator">=</span> this.container<span class="token operator">!</span>.clientHeight - item.clientHeight        const <span class="token punctuation">&#123;</span> animateInfo, prevAnimateInfo <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item        const _animate <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span>JSON.stringify<span class="token punctuation">(</span>animateInfo<span class="token punctuation">))</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.x <span class="token operator">==</span><span class="token operator">=</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            animateInfo.x <span class="token operator">=</span> Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> * maxX            animateInfo.y <span class="token operator">=</span> Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> * maxY        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token builtin class-name">let</span> <span class="token punctuation">&#123;</span> xInterval, yInterval, animateInterval <span class="token punctuation">&#125;</span> <span class="token operator">=</span> this            // xInterval <span class="token operator">=</span> xInterval - Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> * <span class="token number">15000</span>            // yInterval <span class="token operator">=</span> yInterval - Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> * <span class="token number">15000</span>            const xStep <span class="token operator">=</span> <span class="token punctuation">(</span>maxX / xInterval<span class="token punctuation">)</span> * animateInterval            const yStep <span class="token operator">=</span> <span class="token punctuation">(</span>maxY / yInterval<span class="token punctuation">)</span> * animateInterval            <span class="token builtin class-name">let</span> directionX, directionY            <span class="token keyword">if</span> <span class="token punctuation">(</span>prevAnimateInfo.x <span class="token operator">==</span><span class="token operator">=</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                directionX <span class="token operator">=</span> Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span> ? <span class="token number">1</span> <span class="token builtin class-name">:</span> <span class="token parameter variable">-1</span> // 随机开始向左或向右                directionY <span class="token operator">=</span> Math.random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span> ? <span class="token number">1</span> <span class="token builtin class-name">:</span> <span class="token parameter variable">-1</span> // 随机开始向上或向下            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                directionX <span class="token operator">=</span>                    animateInfo.x <span class="token operator">></span> prevAnimateInfo.x <span class="token operator">||</span> animateInfo.x <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span> ? <span class="token number">1</span> <span class="token builtin class-name">:</span> <span class="token parameter variable">-1</span>                directionY <span class="token operator">=</span>                    animateInfo.y<span class="token operator">!</span> <span class="token operator">></span> prevAnimateInfo.y<span class="token operator">!</span> <span class="token operator">||</span> animateInfo.y <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span> ? <span class="token number">1</span> <span class="token builtin class-name">:</span> <span class="token parameter variable">-1</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>directionX <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                // 向右                animateInfo.x <span class="token operator">+=</span> xStep                <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.x <span class="token operator">></span> maxX<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    animateInfo.x <span class="token operator">=</span> maxX                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                // 向左                animateInfo.x -<span class="token operator">=</span> xStep                <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    animateInfo.x <span class="token operator">=</span> <span class="token number">0</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>directionY <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                // 向下                animateInfo.y<span class="token operator">!</span> <span class="token operator">+=</span> yStep                <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.y<span class="token operator">!</span> <span class="token operator">></span> maxY<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    animateInfo.y <span class="token operator">=</span> maxY                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                // 向上                animateInfo.y<span class="token operator">!</span> -<span class="token operator">=</span> yStep                <span class="token keyword">if</span> <span class="token punctuation">(</span>animateInfo.y<span class="token operator">!</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    animateInfo.y <span class="token operator">=</span> <span class="token number">0</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            item.prevAnimateInfo.x <span class="token operator">=</span> _animate.x            item.prevAnimateInfo.y <span class="token operator">=</span> _animate.y        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    setHover<span class="token punctuation">(</span>item: AnimateElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        item.addEventListener<span class="token punctuation">(</span><span class="token string">'mouseenter'</span>, <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>            this.stop<span class="token punctuation">(</span><span class="token punctuation">)</span>            clearTimeout<span class="token punctuation">(</span>this.restartTimer<span class="token punctuation">)</span>            item.style.zIndex <span class="token operator">=</span> this.items.length * <span class="token number">10000</span> + <span class="token string">''</span>            item.style.transform <span class="token operator">=</span> item.style.transform.replace<span class="token punctuation">(</span>                /scale<span class="token variable"><span class="token punctuation">((</span>\d<span class="token operator">+</span>.<span class="token operator">?</span>\d<span class="token operator">*</span><span class="token punctuation">))</span></span>/,                <span class="token string">'scale(1)'</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        item.addEventListener<span class="token punctuation">(</span><span class="token string">'mouseleave'</span>, <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>            item.style.zIndex <span class="token operator">=</span> item.animateInfo.z + <span class="token string">''</span>            item.style.transform <span class="token operator">=</span> item.style.transform.replace<span class="token punctuation">(</span>                /scale<span class="token variable"><span class="token punctuation">((</span>\d<span class="token operator">+</span>.<span class="token operator">?</span>\d<span class="token operator">*</span><span class="token punctuation">))</span></span>/,                <span class="token variable"><span class="token variable">`</span>scale<span class="token punctuation">(</span>$<span class="token punctuation">&#123;</span>item.animateInfo.scale<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token variable">`</span></span>            <span class="token punctuation">)</span>            this.restartTimer <span class="token operator">=</span> setTimeout<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>                this.start<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>, <span class="token number">300</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    render<span class="token punctuation">(</span>item: AnimateElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        const <span class="token punctuation">&#123;</span> x <span class="token operator">=</span> <span class="token number">10</span>, y <span class="token operator">=</span> <span class="token number">10</span>, z, scale <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item.animateInfo        item.style.zIndex <span class="token operator">=</span> z + <span class="token string">''</span>        item.style.transform <span class="token operator">=</span> <span class="token variable"><span class="token variable">`</span>translate<span class="token punctuation">(</span>$<span class="token punctuation">&#123;</span>x<span class="token punctuation">&#125;</span>px, $<span class="token punctuation">&#123;</span>y<span class="token punctuation">&#125;</span>px<span class="token punctuation">)</span> scale<span class="token punctuation">(</span>$<span class="token punctuation">&#123;</span>scale<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token variable">`</span></span>    <span class="token punctuation">&#125;</span>    <span class="token function-name function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.animationFrame <span class="token operator">&amp;&amp;</span> window.cancelAnimationFrame<span class="token punctuation">(</span>this.animationFrame<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function-name function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.items.forEach<span class="token punctuation">((</span>item: AnimateElement<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>            this.setScale<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            this.setPosition<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            this.render<span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        this.animationFrame <span class="token operator">=</span> window.requestAnimationFrame<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>            this.start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function-name function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.stop<span class="token punctuation">(</span><span class="token punctuation">)</span>        this.items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        this.container <span class="token operator">=</span> null        this.mutationObserver <span class="token operator">&amp;&amp;</span> this.mutationObserver.disconnect<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-name function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    randomAnimate <span class="token operator">=</span> new RandomAnimate<span class="token punctuation">(</span>container.value<span class="token operator">!</span><span class="token punctuation">)</span>    const items <span class="token operator">=</span> Array.from<span class="token punctuation">(</span>container.value<span class="token operator">!</span>.children<span class="token punctuation">)</span> as AnimateElement<span class="token punctuation">[</span><span class="token punctuation">]</span>    randomAnimate.add<span class="token punctuation">(</span>items<span class="token punctuation">)</span>    randomAnimate.start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>onMounted<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>onUnmounted<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    randomAnimate.destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"word-cloud-container"</span> <span class="token assign-left variable">ref</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>slot<span class="token operator">></span><span class="token operator">&lt;</span>/slot<span class="token operator">></span>        <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>style <span class="token assign-left variable">lang</span><span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span>.word-cloud-container <span class="token punctuation">&#123;</span>    width: <span class="token number">100</span>%<span class="token punctuation">;</span>    height: <span class="token number">100</span>%<span class="token punctuation">;</span>    position: relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>WordCloudRandom<span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"card"</span> v-for<span class="token operator">=</span><span class="token string">"item in list"</span> :key<span class="token operator">=</span><span class="token string">"item"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"content"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/div<span class="token operator">></span>            <span class="token operator">&lt;</span>/div<span class="token operator">></span>        <span class="token operator">&lt;</span>/WordCloudRandom<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token function">import</span> WordCloudRandom from <span class="token string">'../components/WordCloudRandom.vue'</span><span class="token function">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> from <span class="token string">'vue'</span><span class="token punctuation">;</span>const list <span class="token operator">=</span> ref<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'好好吃饭'</span>, <span class="token string">'好好睡觉'</span>, <span class="token string">'好好玩'</span>, <span class="token string">'Vue'</span>, <span class="token string">'react'</span>, <span class="token string">'angular'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>style <span class="token assign-left variable">lang</span><span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span>.word-cloud-random <span class="token punctuation">&#123;</span>    width: <span class="token number">100</span>%<span class="token punctuation">;</span>    height: <span class="token number">100</span>%<span class="token punctuation">;</span>    overflow: hidden<span class="token punctuation">;</span>    background-color: transparent<span class="token punctuation">;</span>    position: relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>.container <span class="token punctuation">&#123;</span>    width: 880px<span class="token punctuation">;</span>    height: 640px<span class="token punctuation">;</span>    background-color: <span class="token comment">#222832;</span><span class="token punctuation">&#125;</span>.card <span class="token punctuation">&#123;</span>    width: 200px<span class="token punctuation">;</span>    height: auto<span class="token punctuation">;</span>    box-shadow: 0px 2px 4px 0px rgba<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">78</span>, <span class="token number">106</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    border-radius: 7px<span class="token punctuation">;</span>    border: 1px solid rgba<span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cursor: pointer<span class="token punctuation">;</span>    background: transparent<span class="token punctuation">;</span>    text-align: center<span class="token punctuation">;</span>    padding: 6px<span class="token punctuation">;</span>    // transition: all <span class="token number">0</span>.3s<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>:hover <span class="token punctuation">&#123;</span>        border: 1px solid <span class="token comment">#2be5eb;</span>        background: <span class="token comment">#06436d;</span>        box-shadow: 0px 2px 5px 0px rgba<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">78</span>, <span class="token number">106</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>.content <span class="token punctuation">&#123;</span>    font-size: 22px<span class="token punctuation">;</span>    font-family: PingFangSC-Semibold, PingFang SC<span class="token punctuation">;</span>    font-weight: <span class="token number">600</span><span class="token punctuation">;</span>    color: <span class="token comment">#2be5eb;</span>    line-height: 48px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> if </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Promise、async/await相关</title>
      <link href="/2023/03/02/promise/"/>
      <url>/2023/03/02/promise/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="关于async-await、promise和setTimeout的执行顺序"><a href="#关于async-await、promise和setTimeout的执行顺序" class="headerlink" title="关于async/await、promise和setTimeout的执行顺序"></a>关于async/await、promise和setTimeout的执行顺序</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">async <span class="token keyword">function</span> <span class="token function-name function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console.log<span class="token punctuation">(</span><span class="token string">'async1 start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>await async2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span><span class="token string">'asnyc1 end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>async <span class="token keyword">function</span> <span class="token function-name function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console.log<span class="token punctuation">(</span><span class="token string">'async2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console.log<span class="token punctuation">(</span><span class="token string">'script start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>setTimeout<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>console.log<span class="token punctuation">(</span><span class="token string">'setTimeOut'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>async1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>new Promise<span class="token punctuation">(</span>function <span class="token punctuation">(</span>reslove<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console.log<span class="token punctuation">(</span><span class="token string">'promise1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>reslove<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>.then<span class="token punctuation">(</span><span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console.log<span class="token punctuation">(</span><span class="token string">'promise2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console.log<span class="token punctuation">(</span><span class="token string">'script end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>输出script startasync1 startasync2promise1script endasnyc1 endpromise2setTimeOut整个代码片段（script）作为一个宏任务执行console.log<span class="token punctuation">(</span><span class="token string">'script start'</span><span class="token punctuation">)</span>执行setTimeout，是一个异步动作，放入宏任务异步队列中；执行async1<span class="token punctuation">(</span><span class="token punctuation">)</span>，输出async1 start，继续向下执行；执行async2<span class="token punctuation">(</span><span class="token punctuation">)</span>，输出async2，并返回了一个promise对象，await让出了线程，把返回的promise加入了微任务异步队列，所以async1<span class="token punctuation">(</span><span class="token punctuation">)</span>下面的代码也要等待上面完成后继续执行<span class="token punctuation">;</span>执行 new Promise，输出promise1，然后将resolve<span class="token punctuation">(</span><span class="token punctuation">)</span>放入微任务异步队列；执行console.log<span class="token punctuation">(</span><span class="token string">'script end'</span><span class="token punctuation">)</span>，输出script end；到此同步的代码就都执行完成了，然后去微任务异步队列里去获取任务接下来执行resolve（async2返回的promise返回的），输出了async1 end；然后执行resolve（new Promise的），输出了promise2；最后执行setTimeout，输出了settimeout<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> promise </category>
          
      </categories>
      
      
        <tags>
            
            <tag> async/await </tag>
            
            <tag> promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue相关</title>
      <link href="/2023/03/02/vue/"/>
      <url>/2023/03/02/vue/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue3-html单页面模板"><a href="#Vue3-html单页面模板" class="headerlink" title="Vue3 html单页面模板"></a>Vue3 html单页面模板</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html <span class="token assign-left variable">lang</span><span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta <span class="token assign-left variable">charset</span><span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Vue<span class="token operator">&lt;</span>/title<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>></span>        <span class="token operator">&lt;</span>input <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">"number"</span> v-model<span class="token operator">=</span><span class="token string">"num1"</span><span class="token operator">></span> + <span class="token operator">&lt;</span>input <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">"number"</span> v-model<span class="token operator">=</span><span class="token string">"num2"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">3</span>></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> num <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">3</span>></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">></span>提交<span class="token operator">&lt;</span>/button<span class="token operator">></span>        <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://unpkg.com/vue@next"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://unpkg.com/axios/dist/axios.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        const <span class="token punctuation">&#123;</span> onMounted, createApp, reactive, toRefs, computed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue<span class="token punctuation">;</span>        const app <span class="token operator">=</span> createApp<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token function-name function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                // 定义响应式变量                const state <span class="token operator">=</span> reactive<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    msg: <span class="token string">'Vue'</span>,                    num: <span class="token number">0</span>,                    num1: <span class="token number">0</span>,                    num2: <span class="token number">0</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                // 定义方法函数                const submit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>                    alert<span class="token punctuation">(</span>state.num<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                // 生命周期函数                onMounted<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>                    console.log<span class="token punctuation">(</span><span class="token string">'success'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                // 计算属性                state.num <span class="token operator">=</span> computed<span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>                    <span class="token builtin class-name">return</span> state.num1 + state.num2                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token builtin class-name">return</span> <span class="token punctuation">&#123;</span>                    <span class="token punctuation">..</span>.toRefs<span class="token punctuation">(</span>state<span class="token punctuation">)</span>,                    submit                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>.mount<span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>        // 如果需要使用ui组件在这引入        // app.use<span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>    <span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="provide和inject"><a href="#provide和inject" class="headerlink" title="provide和inject"></a>provide和inject</h2><p>provide和inject实现多层级组件传参，实现增删改视图局部刷新</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>router-view v-if<span class="token operator">=</span><span class="token string">"isRouterAlive"</span> /<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token builtin class-name">export</span> default <span class="token punctuation">&#123;</span>  name: <span class="token string">'App'</span>,  <span class="token function-name function">provide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token builtin class-name">return</span> <span class="token punctuation">&#123;</span>      reload: this.reload    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>,  <span class="token function-name function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token builtin class-name">return</span> <span class="token punctuation">&#123;</span>      isRouterAlive: <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>,  methods: <span class="token punctuation">&#123;</span>    // 局部刷新    <span class="token function-name function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      this.isRouterAlive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      this.<span class="token variable">$nextTick</span><span class="token punctuation">(</span><span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.isRouterAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>在需要用到的地方调用reload<span class="token builtin class-name">export</span> default <span class="token punctuation">&#123;</span> inject: <span class="token punctuation">[</span><span class="token string">'reload'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>在需要的地方 this.reload<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Vue修饰符"><a href="#Vue修饰符" class="headerlink" title="Vue修饰符"></a>Vue修饰符</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>根据每一个修饰符的功能，我们可以得到以下修饰符的应用场景：</p><ul><li>.stop：阻止事件冒泡</li><li>.native：绑定原生事件</li><li>.once：事件只执行一次</li><li>.self ：将事件绑定在自身身上，相当于阻止事件冒泡</li><li>.prevent：阻止默认事件</li><li>.caption：用于事件捕获</li><li>.once：只触发一次</li><li>.keyCode：监听特定键盘按下</li><li>.right：右键</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios 拦截器</title>
      <link href="/2023/03/01/axios/"/>
      <url>/2023/03/01/axios/</url>
      
        <content type="html"><![CDATA[<p>Axios 是一个基于 promise 网络请求库，作用于node.js 和浏览器中。它是 isomorphic 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生 node.js http 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="使用-npm"><a href="#使用-npm" class="headerlink" title="使用 npm:"></a>使用 npm:</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用-bower"><a href="#使用-bower" class="headerlink" title="使用 bower:"></a>使用 bower:</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ bower <span class="token function">install</span> axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用-yarn"><a href="#使用-yarn" class="headerlink" title="使用 yarn:"></a>使用 yarn:</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">yarn</span> <span class="token function">add</span> axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Axios-拦截器统一管理接口请求响应"><a href="#Axios-拦截器统一管理接口请求响应" class="headerlink" title="Axios 拦截器统一管理接口请求响应"></a>Axios 拦截器统一管理接口请求响应</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 添加请求拦截器axios.interceptors.request.use<span class="token punctuation">(</span>function <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    // 在发送请求之前做些什么    <span class="token builtin class-name">return</span> config<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    // 对请求错误做些什么    <span class="token builtin class-name">return</span> Promise.reject<span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// 添加响应拦截器axios.interceptors.response.use<span class="token punctuation">(</span>function <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    // 2xx 范围内的状态码都会触发该函数。    // 对响应数据做点什么    <span class="token builtin class-name">return</span> response<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    // 超出 2xx 范围的状态码都会触发该函数。    // 对响应错误做点什么    <span class="token builtin class-name">return</span> Promise.reject<span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>项目拦截例子（可根据具体项目需求添加状态码switch判断）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> axios from <span class="token string">'axios'</span><span class="token function">import</span> <span class="token punctuation">&#123;</span> Toast <span class="token punctuation">&#125;</span> from <span class="token string">'vant'</span><span class="token function">import</span> store from <span class="token string">'../store'</span><span class="token function">import</span> router from <span class="token string">'../router'</span>axios.defaults.baseURL <span class="token operator">=</span> <span class="token string">'http://172.22.4.24:3000'</span>axios.interceptors.request.use<span class="token punctuation">((</span>config<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    config.headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'application/json'</span>    store.state.isLoading <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>config.otherBaseUrl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        config.baseURL <span class="token operator">=</span> <span class="token string">'https://api.iwyu.com/API/weibo/'</span>    <span class="token punctuation">&#125;</span>    <span class="token builtin class-name">return</span> config<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>axios.interceptors.response.use<span class="token punctuation">((</span>res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    const code <span class="token operator">=</span> res.status<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>typeof res.data <span class="token operator">!=</span><span class="token operator">=</span> <span class="token string">'object'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        Toast.fail<span class="token punctuation">(</span><span class="token string">'服务端异常！'</span><span class="token punctuation">)</span>        <span class="token builtin class-name">return</span> Promise.reject<span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res.data.message<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            Toast.fail<span class="token punctuation">(</span>res.data.message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        if<span class="token punctuation">(</span>res.data.resultCode <span class="token operator">==</span> <span class="token number">416</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            router.push<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>path: <span class="token string">'/login'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">==</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> res.data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        store.state.isLoading <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res.data.code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            Toast.fail<span class="token punctuation">(</span>res.data.message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token builtin class-name">return</span> res.data<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>, <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    Toast.fail<span class="token punctuation">(</span><span class="token string">'服务端异常！'</span><span class="token punctuation">)</span>    <span class="token builtin class-name">return</span> Promise.reject<span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token builtin class-name">export</span> default axios<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-theme主题介绍</title>
      <link href="/2023/03/01/example/"/>
      <url>/2023/03/01/example/</url>
      
        <content type="html"><![CDATA[<h2 id="hot-hexo-theme"><a href="#hot-hexo-theme" class="headerlink" title="hot hexo-theme"></a>hot hexo-theme</h2><ul><li><a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></li><li><a href="https://github.com/litten/hexo-theme-yilia">https://github.com/litten/hexo-theme-yilia</a></li><li><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></li><li><a href="https://github.com/ppoffice/hexo-theme-icarus">https://github.com/ppoffice/hexo-theme-icarus</a></li><li><a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></li><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-router相关</title>
      <link href="/2023/03/01/vue-router/"/>
      <url>/2023/03/01/vue-router/</url>
      
        <content type="html"><![CDATA[<p>Vue Router 是 Vue.js 的官方路由。它与 Vue.js 核心深度集成，让用 Vue.js 构建单页应用变得轻而易举。功能包括：</p><ul><li>嵌套路由映射</li><li>动态路由选择</li><li>模块化、基于组件的路由配置</li><li>路由参数、查询、通配符</li><li>展示由 Vue.js 的过渡系统提供的过渡效果</li><li>细致的导航控制</li><li>自动激活 CSS 类的链接</li><li>HTML5 history 模式或 hash 模式</li><li>可定制的滚动行为</li><li>URL 的正确编码</li></ul><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="Vue-router根据设备型号，显示对应路由"><a href="#Vue-router根据设备型号，显示对应路由" class="headerlink" title="Vue router根据设备型号，显示对应路由"></a>Vue router根据设备型号，显示对应路由</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> Vue from <span class="token string">'vue'</span><span class="token function">import</span> Router from <span class="token string">'vue-router'</span>Vue.use<span class="token punctuation">(</span>Router<span class="token punctuation">)</span>var routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>//pc端路由const WebRoutes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>//移动端路由const mobileRoutes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>//核心判断<span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span>navigator.userAgent.match<span class="token punctuation">(</span><span class="token operator">/</span><span class="token punctuation">(</span>phone<span class="token operator">|</span>pad<span class="token operator">|</span>pod<span class="token operator">|</span>iPhone<span class="token operator">|</span>iPod<span class="token operator">|</span>ios<span class="token operator">|</span>iPad<span class="token operator">|</span>Android<span class="token operator">|</span>Mobile<span class="token operator">|</span>BlackBerry<span class="token operator">|</span>IEMobile<span class="token operator">|</span>MQQBrowser<span class="token operator">|</span>JUC<span class="token operator">|</span>Fennec<span class="token operator">|</span>wOSBrowser<span class="token operator">|</span>BrowserNG<span class="token operator">|</span>WebOS<span class="token operator">|</span>Symbian<span class="token operator">|</span>Windows Phone<span class="token punctuation">)</span><span class="token operator">/</span>i<span class="token punctuation">))</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  routes <span class="token operator">=</span> mobileRoutes<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  routes <span class="token operator">=</span> WebRoutes<span class="token punctuation">&#125;</span>const router <span class="token operator">=</span> new Router<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  mode: <span class="token string">'history'</span>,  routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Vue路由守卫实现无登录只跳转到登录页面"><a href="#Vue路由守卫实现无登录只跳转到登录页面" class="headerlink" title="Vue路由守卫实现无登录只跳转到登录页面"></a>Vue路由守卫实现无登录只跳转到登录页面</h3><p>在实际的项目中，有一些页面是需要登录后才可以浏览，有一些功能需要登录权限。如果没限制用户未登录也可以通过url直接浏览，这需要我们路由上做一些限制。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">router.beforeEach<span class="token punctuation">((</span>to, from, next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>  <span class="token builtin class-name">let</span> token <span class="token operator">=</span> localStorage.getItem<span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">||</span> to.path <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'/login'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    next<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    next<span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Vue-router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webscoket自定义子协议携带token</title>
      <link href="/2023/03/01/webscoket/"/>
      <url>/2023/03/01/webscoket/</url>
      
        <content type="html"><![CDATA[<h2 id="webscoket自定义子协议携带token"><a href="#webscoket自定义子协议携带token" class="headerlink" title="webscoket自定义子协议携带token"></a>webscoket自定义子协议携带token</h2><p>请求地址中携带token</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">const uri <span class="token operator">=</span> <span class="token string">'ws://47.106.86.128:8000/ws/bots/?'</span>+token<span class="token punctuation">;</span>this.socket <span class="token operator">=</span> new WebSocket<span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>自定义子协议，new scoket对象的时候传入protocols,websocket请求头中可以包含Sec-WebSocket-Protocol这个属性，该属性是一个自定义的子协议。它从客户端发送到服务器并返回从服务器到客户端确认子协议。我们可以利用这个属性添加token。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">const uri <span class="token operator">=</span> <span class="token string">'ws://172.22.5.8:7777/ws/bots/'</span><span class="token punctuation">;</span>this.socket <span class="token operator">=</span> new WebSocket<span class="token punctuation">(</span>uri, <span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> WebScoket </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> WebScoket </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
